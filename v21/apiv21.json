{
  "openapi": "3.0.2",
  "info": {
    "title": "Buyco API",
    "description": "This is the company API. It does cool things",
    "version": "2.1.0"
  },
  "paths": {
    "/api/v2/shipments/{id}": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "CreateShipment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shipment"
              }
            }
          },
          "required": true
        },
        "responses": {}
      }
    }
  },
  "components": {
    "schemas": {
      "ContainerType": {
        "type": "string",
        "enum": [
          "GENERAL",
          "THERMAL",
          "OPEN_TOP",
          "TANK"
        ],
        "description": "Containers Glossary \n\nBuyCo denominations, based on ISO 6346 (managed by BIC) \nhttps://www.bic-code.org/wp-content/uploads/2018/01/SizeAndType-Table1-3.pdf\n\n - size = 20, 40, 40HC, 45\n   aka. size class\n\n - type = GENERAL, THERMAL, OPEN_TOP, TANK (later VENTILATED, etc ...) aka. type class\n   - A commonly named DRY is a GENERAL ISO type\n   - A commonly named REEFER is a THERMAL (Heated or Refrigerated) ISO type\n\n - size_type_code = 22G1, 45R1, ...\n   - size_code = 22, 45, ...\n     - size_code_first_char\n       container length 4 == 40ft == 12192mm\n                        L == 45ft == 13716mm\n     - size_code_second_char\n       container height & width \n                        0 -> height == 8ft == 2438mm; width = 2436mm\n                        L -> height == 8ft6in == 2591mm; width > 2500mm\n                        5 -> height == 9ft6in == 2895mm; width = 2436mm\n\n   - type_code_class = G, R, K ...\n   - type_code = G0, R1, K3, ... \n   - type_code_group = GP, RE, RT, ...\n     A group of type_codes - GP=G1,G2,G3 ...\n   - type_designation\n   - stacking_and_racking_capability = FULL, REDUCED_STRENGTH\n     Inferred by the type_code. G0,G1 -> FULL, GA,GB -> REDUCED_STRENGTH"
      },
      "ContainerSize": {
        "type": "string",
        "enum": [
          "20",
          "40",
          "40HC"
        ]
      },
      "ContainerGrade": {
        "type": "string",
        "enum": [
          "FOOD"
        ]
      },
      "SealType": {
        "type": "string",
        "enum": [
          "SHIPPER",
          "CARRIER",
          "CUSTOMS"
        ]
      },
      "Seal": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/SealType"
          }
        },
        "required": [
          "number",
          "type"
        ]
      },
      "KeyValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "PhysicalContainer": {
        "type": "object",
        "properties": {
          "identification_number": {
            "type": "string",
            "description": "Container BIC identification numner, including check digit e.g. BEAU5124450"
          },
          "size_type_code": {
            "type": "string",
            "description": "ISO size type code, e.g. 22G1, 45R1"
          },
          "tare_weight_g": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "max_gross_weight_g": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "A Physical container."
      },
      "ThermalContainerSpecs": {
        "type": "object",
        "properties": {
          "ventilation_cm3_hour": {
            "type": "integer",
            "format": "int32"
          },
          "temperature_celsius": {
            "type": "string"
          },
          "humidity_percent": {
            "type": "string"
          }
        },
        "required": [
          "ventilation_cm3_hour",
          "temperature_celsius",
          "humidity_percent"
        ],
        "description": "Extra specifications for a thermal (refrigerated or heated) container."
      },
      "VentilationSpecs": {
        "type": "object",
        "properties": {
          "ventilation_cm3_hour": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "ventilation_cm3_hour"
        ],
        "description": "Extra specifications for a ventilated container."
      },
      "OpenTopContainerSpecs": {
        "type": "object",
        "properties": {
          "out_of_gauge_mm": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "out_of_gauge_mm"
        ],
        "description": "Extra specifications for an open-top container."
      },
      "TankContainerSpecs": {
        "type": "object",
        "properties": {
          "pressure_kpa": {
            "type": "integer",
            "format": "int32"
          },
          "temperature_celsius": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "pressure_kpa",
          "temperature_celsius"
        ],
        "description": "Extra specifications for a tank container."
      },
      "PackageSpec": {
        "type": "object",
        "properties": {
          "package_type_code": {
            "type": "string"
          },
          "gross_weight_g": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "net_weight_g": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "volume_cm3": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height_mm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "length_mm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "width_mm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "required": [
          "package_type_code"
        ]
      },
      "Product": {
        "type": "object",
        "properties": {
          "piece_count": {
            "type": "integer",
            "format": "int32"
          },
          "sku": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "harmonized_system_code": {
            "type": "string"
          }
        },
        "required": [
          "piece_count",
          "sku",
          "name",
          "harmonized_system_code"
        ]
      },
      "DateOptionalTime": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "time": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "date",
          "time"
        ]
      },
      "FacilityType": {
        "type": "string",
        "enum": [
          "POTE",
          "INTE",
          "CLOC",
          "COYA",
          "DEPO",
          "COFS"
        ],
        "description": "A type of Facility - DCSA definitions"
      },
      "UNLocationCode": {
        "type": "string",
        "description": "5-char UN Location Code"
      },
      "Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "street_bis": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "country_code": {
            "type": "string"
          }
        },
        "required": [
          "street",
          "city",
          "country_code"
        ]
      },
      "Phone": {
        "type": "string"
      },
      "Organization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "external_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "phone": {
            "$ref": "#/components/schemas/Phone"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "tax_identifier": {
            "type": "string",
            "nullable": true
          },
          "official_identifier": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "address"
        ]
      },
      "Facility": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FacilityType"
          },
          "unlocode": {
            "$ref": "#/components/schemas/UNLocationCode",
            "nullable": true
          },
          "organization": {
            "$ref": "#/components/schemas/Organization",
            "nullable": true
          },
          "organization_external_id": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "Cargo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "external_id": {
            "type": "string",
            "nullable": true
          },
          "sales_order_number": {
            "type": "string",
            "nullable": true
          },
          "purchase_order_number": {
            "type": "string",
            "nullable": true
          },
          "delivery_number": {
            "type": "string",
            "nullable": true
          },
          "marks_and_numbers": {
            "type": "string",
            "nullable": true
          },
          "invoice_number": {
            "type": "string",
            "nullable": true
          },
          "additional_references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "gross_weight_g": {
            "type": "integer",
            "format": "int32"
          },
          "net_weight_g": {
            "type": "integer",
            "format": "int32"
          },
          "volume_cm3": {
            "type": "integer",
            "format": "int32"
          },
          "package_count": {
            "type": "integer",
            "format": "int32",
            "description": "A count of the packages"
          },
          "package_spec": {
            "$ref": "#/components/schemas/PackageSpec"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          },
          "readiness_date": {
            "$ref": "#/components/schemas/DateOptionalTime"
          },
          "origin": {
            "$ref": "#/components/schemas/Facility",
            "nullable": true
          },
          "delivery": {
            "$ref": "#/components/schemas/Facility",
            "nullable": true
          }
        }
      },
      "Container": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "external_id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ContainerType"
          },
          "size": {
            "$ref": "#/components/schemas/ContainerSize"
          },
          "grade": {
            "$ref": "#/components/schemas/ContainerGrade"
          },
          "shipper_owned": {
            "type": "boolean"
          },
          "seals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Seal"
            }
          },
          "stuffing_reference": {
            "type": "string",
            "nullable": true
          },
          "additional_references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "measured_weight_g": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "physical_container": {
            "$ref": "#/components/schemas/PhysicalContainer",
            "nullable": true
          },
          "thermal_specs": {
            "$ref": "#/components/schemas/ThermalContainerSpecs",
            "nullable": true
          },
          "ventilation_specs": {
            "$ref": "#/components/schemas/VentilationSpecs",
            "nullable": true
          },
          "open_top_specs": {
            "$ref": "#/components/schemas/OpenTopContainerSpecs",
            "nullable": true
          },
          "tank_specs": {
            "$ref": "#/components/schemas/TankContainerSpecs",
            "nullable": true
          },
          "cargoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cargo"
            }
          }
        },
        "required": [
          "type",
          "size"
        ]
      },
      "IncotermCode": {
        "type": "string",
        "enum": [
          "FOB",
          "CFR",
          "FAS",
          "CIF",
          "EXW",
          "FCA",
          "CPT",
          "CIP",
          "DAP",
          "DPU",
          "DDP",
          "DAT",
          "DAF",
          "DES",
          "DEQ",
          "DDU"
        ]
      },
      "Incoterm": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/IncotermCode"
          },
          "location_unlocode": {
            "$ref": "#/components/schemas/UNLocationCode",
            "nullable": true
          }
        },
        "required": [
          "code"
        ]
      },
      "RoutingInstructions": {
        "type": "object",
        "properties": {
          "incoterm": {
            "$ref": "#/components/schemas/Incoterm"
          },
          "ship_from": {
            "$ref": "#/components/schemas/Facility"
          },
          "ship_to": {
            "$ref": "#/components/schemas/Facility"
          },
          "ship_via": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Facility"
            }
          },
          "pre_ship_from": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Facility"
            }
          },
          "post_ship_to": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Facility"
            }
          },
          "ship_from_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "ship_to_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "carrier_instructions": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Routing instructions \n<p> Minimum input in order to elaborate a #Plan </p>\n\n<p> ship_from & ship_to are used to select a sailing schedule (including carrier haulage)\nThey can be a Port, or an inland Customer Location or other place (i.e. Door)  </p>\n\n<p> Additional routing information (merchant haulage) can be \nspecified with pre_ship_from & post_ship_to </p>"
      },
      "Person": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "external_id": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "middle_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "$ref": "#/components/schemas/Phone"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "email"
        ]
      },
      "PartyRole": {
        "type": "string",
        "enum": [
          "FORWARDER",
          "SHIPPER",
          "CONSIGNEE",
          "BANK",
          "NOTIFY_1",
          "NOTIFY_2",
          "NOTIFY_3",
          "SELLER"
        ]
      },
      "PartyRoleReference": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/PartyRole"
          },
          "reference": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "role"
        ]
      },
      "Party": {
        "type": "object",
        "properties": {
          "organization": {
            "$ref": "#/components/schemas/Organization",
            "nullable": true
          },
          "organization_external_id": {
            "type": "string",
            "nullable": true
          },
          "person": {
            "$ref": "#/components/schemas/Person",
            "nullable": true
          },
          "person_external_id": {
            "type": "string",
            "nullable": true
          },
          "role_references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyRoleReference"
            }
          }
        },
        "required": [
          "role_references"
        ],
        "description": "A Party is either an organization or a person.\nIt is associated with role(s) and possibly reference(s).\nThe organization or person can be provided fully, \nor referreted to by an external id"
      },
      "BillOfLadingProperties": {
        "type": "object"
      },
      "Shipment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the shipment, aka as 'BuyCo Ref' e.g. Q0219210015"
          },
          "external_id": {
            "type": "string",
            "nullable": true,
            "description": "An optional 3rd party id, which can be used to refer to the shipment"
          },
          "containers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Container"
            },
            "description": "The containers attached to the shipment"
          },
          "routing_instructions": {
            "$ref": "#/components/schemas/RoutingInstructions"
          },
          "parties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "bl_properties": {
            "$ref": "#/components/schemas/BillOfLadingProperties"
          },
          "bl_properties_template_id": {
            "type": "string",
            "nullable": true
          },
          "general_instructions": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "containers",
          "routing_instructions",
          "parties"
        ],
        "description": "A BuyCo shipment"
      }
    }
  }
}